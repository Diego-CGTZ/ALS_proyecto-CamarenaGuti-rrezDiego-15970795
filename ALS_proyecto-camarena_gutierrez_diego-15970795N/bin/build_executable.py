#!/usr/bin/env python3
"""
Script para compilar la aplicaci√≥n Flask en un ejecutable independiente.
Este script crea un ejecutable est√°tico que incluye todas las dependencias.

Uso: python build_executable.py
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def main():
    """Funci√≥n principal para compilar el ejecutable."""
    print("üöÄ Iniciando proceso de compilaci√≥n del ejecutable...")
    print("=" * 60)
    
    # Verificar que PyInstaller est√© disponible
    try:
        import PyInstaller
        print(f"‚úÖ PyInstaller encontrado: versi√≥n {PyInstaller.__version__}")
    except ImportError:
        print("‚ùå PyInstaller no est√° instalado.")
        print("üí° Instalando PyInstaller...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])
        print("‚úÖ PyInstaller instalado correctamente.")
    
    # Rutas del proyecto
    current_dir = Path(__file__).parent
    src_dir = current_dir.parent / "src"
    dist_dir = current_dir / "dist"
    build_dir = current_dir / "build"
    
    # Limpiar directorios anteriores
    if dist_dir.exists():
        shutil.rmtree(dist_dir)
        print("üóëÔ∏è  Directorio dist limpiado")
    
    if build_dir.exists():
        shutil.rmtree(build_dir)
        print("üóëÔ∏è  Directorio build limpiado")
    
    # Crear el archivo de entrada para el ejecutable
    launcher_path = current_dir / "textiles_als_launcher.py"
    create_launcher_script(launcher_path, src_dir)
    
    # Comando PyInstaller
    pyinstaller_cmd = [
        "pyinstaller",
        "--onefile",  # Crear un solo archivo ejecutable
        "--windowed",  # Sin ventana de consola (comentar si quieres ver debug)
        "--name=TextilesALS",
        "--icon=icon.ico",  # Opcional: a√±adir icono
        "--add-data", f"{src_dir / 'app' / 'templates'};app/templates",
        "--add-data", f"{src_dir / 'app' / 'static'};app/static",
        "--hidden-import=app",
        "--hidden-import=app.models",
        "--hidden-import=app.routes",
        "--hidden-import=app.forms",
        "--hidden-import=app.services",
        "--hidden-import=flask",
        "--hidden-import=flask_login",
        "--hidden-import=flask_wtf",
        "--hidden-import=wtforms",
        "--hidden-import=sirope",
        "--hidden-import=redis",
        "--clean",  # Limpiar cache de PyInstaller
        str(launcher_path)
    ]
    
    print(f"üî® Ejecutando comando: {' '.join(pyinstaller_cmd)}")
    print("‚è≥ Este proceso puede tardar varios minutos...")
    
    try:
        # Cambiar al directorio bin para ejecutar PyInstaller
        os.chdir(current_dir)
        subprocess.check_call(pyinstaller_cmd)
        
        print("‚úÖ Compilaci√≥n completada exitosamente!")
        
        # Verificar que el ejecutable se cre√≥
        exe_path = dist_dir / "TextilesALS.exe"
        if exe_path.exists():
            exe_size = exe_path.stat().st_size / (1024 * 1024)  # MB
            print(f"üì¶ Ejecutable creado: {exe_path}")
            print(f"üìè Tama√±o: {exe_size:.1f} MB")
            
            # Crear script de instalaci√≥n
            create_install_script(current_dir)
            
            print("\nüéâ ¬°Proceso completado!")
            print("=" * 60)
            print("El ejecutable se encuentra en: bin/dist/TextilesALS.exe")
            print("Para usar:")
            print("1. Copiar TextilesALS.exe a donde desees")
            print("2. Ejecutar directamente - no necesita Python ni librer√≠as externas")
            print("3. La aplicaci√≥n se ejecutar√° en http://localhost:5000")
            
        else:
            print("‚ùå Error: No se pudo crear el ejecutable")
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Error durante la compilaci√≥n: {e}")
        return False
    
    # Limpiar archivo temporal
    if launcher_path.exists():
        launcher_path.unlink()
        print("üóëÔ∏è  Archivo temporal limpiado")
    
    return True

def create_launcher_script(launcher_path, src_dir):
    """Crear el script de lanzamiento para el ejecutable."""
    
    launcher_content = f'''#!/usr/bin/env python3
"""
Launcher para el ejecutable de Sistema de Gesti√≥n Textiles ALS.
Este archivo es usado por PyInstaller para crear el ejecutable.
"""

import sys
import os
from pathlib import Path

# Configurar rutas para el ejecutable
if getattr(sys, 'frozen', False):
    # Si estamos ejecutando desde el ejecutable
    application_path = Path(sys.executable).parent
    # PyInstaller crea un directorio temporal en sys._MEIPASS
    base_path = Path(sys._MEIPASS)
else:
    # Si estamos ejecutando desde c√≥digo fuente
    base_path = Path(__file__).parent.parent / "src"
    application_path = base_path

# Agregar el directorio de la aplicaci√≥n al path
sys.path.insert(0, str(base_path))

def main():
    """Funci√≥n principal del ejecutable."""
    try:
        print("üöÄ Iniciando Sistema de Gesti√≥n Textiles ALS...")
        print("=" * 50)
        print("üìç Aplicaci√≥n web disponible en: http://localhost:5000")
        print("üîë Usuario por defecto: admin / contrase√±a: admin123")
        print("‚ö†Ô∏è  Presiona Ctrl+C para detener el servidor")
        print("=" * 50)
        
        # Importar y crear la aplicaci√≥n
        from app import create_app
        
        app = create_app()
        
        # Configurar para ejecuci√≥n como ejecutable
        app.config['DEBUG'] = False
        app.config['ENV'] = 'production'
        
        # Ejecutar servidor
        import webbrowser
        import threading
        import time
        
        def abrir_navegador():
            """Abrir navegador despu√©s de un breve retraso."""
            time.sleep(2)
            try:
                webbrowser.open('http://localhost:5000')
            except:
                pass  # Si no puede abrir el navegador, no es cr√≠tico
        
        # Abrir navegador en segundo plano
        threading.Thread(target=abrir_navegador, daemon=True).start()
        
        # Ejecutar aplicaci√≥n
        app.run(
            host='127.0.0.1',  # Solo localhost por seguridad
            port=5000,
            debug=False,
            use_reloader=False,  # Importante para el ejecutable
            threaded=True
        )
        
    except KeyboardInterrupt:
        print("\\nüëã Aplicaci√≥n detenida por el usuario.")
        print("¬°Gracias por usar Sistema de Gesti√≥n Textiles ALS!")
        
    except Exception as e:
        print(f"‚ùå Error al iniciar la aplicaci√≥n: {{e}}")
        print("üí° Verifica que el puerto 5000 no est√© en uso.")
        input("Presiona Enter para salir...")

if __name__ == '__main__':
    main()
'''
    
    with open(launcher_path, 'w', encoding='utf-8') as f:
        f.write(launcher_content)
    
    print(f"‚úÖ Script launcher creado: {launcher_path}")

def create_install_script(bin_dir):
    """Crear script de instalaci√≥n para el usuario final."""
    
    install_script = bin_dir / "INSTRUCCIONES_EJECUTABLE.txt"
    
    content = """
Sistema de Gesti√≥n Textiles ALS - Ejecutable Independiente
=========================================================

CONTENIDO DEL DIRECTORIO:
========================
- TextilesALS.exe          -> Ejecutable principal (en carpeta dist/)
- build_executable.py      -> Script de compilaci√≥n 
- INSTRUCCIONES_EJECUTABLE.txt -> Este archivo

COMO USAR EL EJECUTABLE:
=======================

1. EJECUCI√ìN SIMPLE:
   - Navegar a: bin/dist/
   - Doble clic en "TextilesALS.exe"
   - ¬°Listo! La aplicaci√≥n se abrir√° autom√°ticamente en tu navegador

2. EJECUCI√ìN DESDE L√çNEA DE COMANDOS:
   - Abrir terminal/cmd en el directorio bin/dist/
   - Ejecutar: TextilesALS.exe
   - Abrir navegador en: http://localhost:5000

3. CREDENCIALES POR DEFECTO:
   - Usuario: admin
   - Contrase√±a: admin123

CARACTER√çSTICAS DEL EJECUTABLE:
==============================
‚úÖ No requiere Python instalado
‚úÖ No requiere librer√≠as externas
‚úÖ Todas las dependencias incluidas
‚úÖ Ejecutable de un solo archivo
‚úÖ Compatible con Windows
‚úÖ Abre autom√°ticamente el navegador
‚úÖ Servidor web integrado

REQUISITOS DEL SISTEMA:
======================
- Windows 7 o superior
- M√≠nimo 4GB RAM
- Puerto 5000 disponible
- Navegador web moderno

SOLUCI√ìN DE PROBLEMAS:
=====================
- Si no abre el navegador: Ir manualmente a http://localhost:5000
- Si dice "puerto en uso": Cerrar otras aplicaciones que usen puerto 5000
- Si no inicia: Ejecutar como administrador
- Si hay errores: Verificar antivirus no bloquee el archivo

ESTRUCTURA DE DATOS:
===================
La aplicaci√≥n crea autom√°ticamente:
- Base de datos local (archivos .json)
- Usuario administrador por defecto
- Estructura de carpetas necesaria

PARA DESARROLLADORES:
====================
Para recompilar el ejecutable:
1. python build_executable.py
2. El nuevo ejecutable estar√° en dist/TextilesALS.exe

INFORMACI√ìN T√âCNICA:
===================
- Framework: Flask
- Base de datos: Sirope (archivos JSON)
- Compilado con: PyInstaller
- Tama√±o aproximado: 40-60 MB
- Tipo: Aplicaci√≥n web local

---
Proyecto ALS - Camarena Guti√©rrez, Diego - 15970795N
Aplicaci√≥n de gesti√≥n para personalizaci√≥n textil
"""
    
    with open(install_script, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"‚úÖ Instrucciones creadas: {install_script}")

if __name__ == "__main__":
    success = main()
    if not success:
        input("‚ùå Presiona Enter para salir...")
    else:
        input("‚úÖ Presiona Enter para salir...")
